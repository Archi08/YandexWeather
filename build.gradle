plugins {
    id "java-library"
    id "io.qameta.allure" version "2.8.1"
    id "com.github.ben-manes.versions" version "0.27.0"
}

sourceCompatibility = 1.8

allure {
    version = "2.12.0"
    downloadLinkFormat = "https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("com.squareup.retrofit2:converter-gson:2.6.2")
    implementation("io.qameta.allure:allure-okhttp3:2.13.0")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testImplementation("com.codeborne:selenide:5.5.0")
    testImplementation("io.qameta.allure:allure-selenide:2.13.0")
    testImplementation("io.undertow:undertow-core:2.0.27.Final")
    testRuntimeOnly("io.qameta.allure:allure-junit5:2.13.0")
    testRuntimeOnly("org.slf4j:slf4j-simple:1.7.29")
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    compile 'com.pholser:junit-quickcheck-core:0.9'
    compile 'com.pholser:junit-quickcheck-generators:0.9'
    compile 'com.pholser:junit-quickcheck-guava:0.9'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'


}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}

test {
    useJUnit()
}


wrapper.gradleVersion = "5.6"
